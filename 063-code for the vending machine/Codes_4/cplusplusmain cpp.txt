class VendingMachine {
    private:
        State currentState;
        double amount;
        int noOfRacks;
        list<Rack> racks; 
        list<int> availableRacks; 

        // The VendingMachine is a singleton class that ensures it will have only one active instance at a time
        static VendingMachine machine = NULL;

        // Created a private constructor to add a restriction (due to Singleton)
        VendingMachine() { }

    // Created a static method to access the singleton instance of VendingMachine
    public:
        static VendingMachine getInstance() {
            if (machine == NULL) {
                machine = new VendingMachine();
            }
            return machine;
        }
        
        void insertMoney(double amount){}
        void pressButton(int rackNumber){}
        void returnChange(double amount){}
        void updateInventory(int rackNumber){}
        void dispenseProduct(int rackNumber){}
        int getProductIdAtRack(int rackNumber){}
};