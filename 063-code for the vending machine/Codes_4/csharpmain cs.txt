class VendingMachine {
    private State currentState;
    private double amount;
    private int noOfRacks;
    private List<Rack> racks; 
    private List<int> availableRacks; 

    // The VendingMachine is a singleton class that ensures it will have only one active instance at a time
    private static VendingMachine vendingMachine = null;

    // Created a private constructor to add a restriction (due to Singleton)
    VendingMachine() {}

    // Created a static method to access the singleton instance of VendingMachine
    public static VendingMachine GetInstance {
        get {
            if (vendingMachine == null) {
                vendingMachine = new VendingMachine();
            }
            return vendingMachine;
        }
    }

    public void InsertMoney(double amount) {}
    public void PressButton(int rackNumber) {}
    public void ReturnChange(double amount) {}
    public void UpdateInventory(int rackNumber) {}
    public void DispenseProduct(int rackNumber) {}
    public int GetProductIdAtRack(int rackNumber) {}
}