class ParkingLot {
    private:
        int id;
        string name;
        string address;
        ParkingRate parkingRate;

        map<string, Entrance> entrance;
        map<string, Exit> exit;

        // Create a hashmap that identifies all currently generated tickets using their ticket number
        map<string, ParkingTicket> tickets;

        // The ParkingLot is a singleton class that ensures it will have only one active instance at a time
        // Both the Entrance and Exit classes use this class to create and close parking tickets
        static ParkingLot parkingLot = NULL;

        // Created a private constructor to add a restriction (due to Singleton)
        ParkingLot() {
            // Call the name, address and parking_rate 
            // Create initial entrance and exit hashmaps respectively
        }

    // Created a static method to access the singleton instance of ParkingLot
    public:
        static ParkingLot getInstance() {
            if (parkingLot == NULL) {
                parkingLot = new ParkingLot();
            }
            return parkingLot;
        }

        bool addEntrance(Entrance entrance) {}
        bool addExit(Exit exit) {}

        // This function allows parking tickets to be available at multiple entrances
        ParkingTicket getParkingTicket(Vehicle vehicle) {}

        bool isFull(ParkingSpot type) {}
};