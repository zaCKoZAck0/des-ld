class MeetingScheduler {
  private User organizer;
  private Calendar calendar;
  private List<MeetingRoom> rooms;

  // Scheduler is a singleton class that ensures it will have only one active instance at a time
  private static MeetingScheduler scheduler = null;
    
  // Created a static method to access the singleton instance of Scheduler class
  public static MeetingScheduler GetInstance() {
    if (scheduler == null) {
      scheduler = new MeetingScheduler();
    }
    return scheduler;
  }

  public bool ScheduleMeeting(List<User> users, Interval interval);
  public bool CancelMeeting(List<User> users, Interval interval);
  public bool BookRoom(MeetingRoom room, int numberOfPersons, Interval interval);
  public bool ReleaseRoom(MeetingRoom room, Interval interval);
  public MeetingRoom CheckRoomsAvailability(int numberOfPersons, Interval interval);
}