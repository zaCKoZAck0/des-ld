class Library {
    private:
        std::string name;
        Address address;

        // Private constructor to prevent external instantiation
        Library() {}

    public:
        Address GetAddress();

        // The Library is a singleton class that ensures it will have only one active instance at a time
        static Library* library;

        // Created a static method to access the singleton instance of Library class
        static Library* GetInstance() {
            if (library == nullptr) {
                library = new Library();
            }
            return library;
        }
};

// Initialize the static member outside of the class
Library* Library::library = nullptr;