class Puzzle {
  // Puzzle is a singleton class that ensures it will have only one active instance at a time
  constructor(board=null, free=null){
    if (Puzzle._instance){
      throw new Error("Singleton classes can't be instantiated more than once.")
    }

    Puzzle._instance = this;
    this.#board = new Array(new Array()); // List of List of Piece
    this.#free = new Array(); // List of Piece for currently free pieces (yet to be inserted in board)
  }

  // Created a static method to access the singleton instance of Puzzle class
  static getInstance() {
    if(!Puzzle._instance){
        return new Puzzle();
    }

    return Puzzle._instance;
  }

  insertPiece(piece, row, column) {}
}