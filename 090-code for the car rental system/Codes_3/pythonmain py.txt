from abc import ABC, abstractmethod

class Account(Person, ABC):
  def __init__(self, name, address, email, phone_number, account_id, password):
    super().__init__(name, address, email, phone_number)
    self.__id = account_id
    self.__password = password
    self.__status = AccountStatus.NONE

  @abstractmethod
  def reset_password(self):
    pass

class Receptionist(Account):
  def __init__(self, name, address, email, phone_number, account_id, password, person, date_joined):
    super().__init__(name, address, email, phone_number, accountId, password, person, status)
    self.__date_joined = date_joined


  def search_customer(self, name):
    None

  def add_reservation(self):
    None

  def cancel_reservation(self):
    None

  def reset_password(self):
    # functionality
  

class Customer(Account):
  def __init__(self, name, address, email, phone_number, account_id, password, person, license_number, lisense_expiry):
    super().__init__(name, address, email, phone_number, account_id, password, person, status)
    self.__license_number = license_number
    self.__lisense_expiry = lisense_expiry

  def add_reservation(self):
    None
    
  def cancel_reservation(self):
    None
    
  def get_reservations(self):
    None

  def reset_password(self):
    # functionality