// Payment is an abstract class
class Payment {
  #paymentId
  #amount;
  #status;
  #timestamp;
  constructor(paymentId, amount, timestamp, status) {
    if (this.constructor == Payment) {
      throw new Error("Abstract classes can't be instantiated.");
    }
    else {
      this.#paymentId = paymentId;
      this.#amount = amount;
      this.#timestamp = timestamp;
      this.#status = status; // Refers to the PaymentStatus enum
    }
  }
  makePayment() { }
}
class Cash extends Payment{
  constructor(paymentId, amount, timestamp, status) {
    super(paymentId, amount, timestamp, status);
  }
  makePayment(){
    // functionality
  }
}
class CreditCard extends Payment{
  #nameOnCard;
  #cardNumber;
  constructor(paymentId, amount, timestamp, status, nameOnCard, cardNumber) {
    this.#nameOnCard = nameOnCard;
    this.#cardNumber = cardNumber;
    super(paymentId, amount, timestamp, status);
  }
  makePayment(){
    // functionality
  }
}